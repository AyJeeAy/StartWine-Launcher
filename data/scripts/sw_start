#!/usr/bin/env python3

import os
import sys
from pathlib import Path
import subprocess
from subprocess import Popen, run
import platform

#######################___PATHS__:

sw_path = Path(os.path.dirname(os.path.abspath(__file__))).parent.parent
sw_scripts = f"{sw_path}/data/scripts"
sw_tools = Path(f"{sw_path}/data/tools")
sw_main = Path(f"{sw_scripts}/sw_main")
sw_crier = Path(f"{sw_scripts}/sw_crier.py")

ld_path_x86_64 = f"{sw_tools}/utils/libs/x86-64"
ld_path_i386 = f"{sw_tools}/utils/libs/i386"
gi_path = f"{sw_tools}/utils/libs/x86-64/gi_typelib"

python_modules = f"{sw_tools}/utils/libs/python/site-packages"

os.environ["LD_LIBRARY_PATH"] = os.pathsep + ld_path_i386 + os.pathsep + ld_path_x86_64
os.environ["GI_TYPELIB_PATH"] = os.pathsep + gi_path

################################___START___:

def start():

    try:
        arg = sys.argv[1]
        Popen(f"{sw_main} \"{arg}\"", shell=True)

    except IndexError as e:
        print('<< start_sw_main_default >>')
        Popen(f"{sw_main}", shell=True)

try:
    py_ver = str(platform.python_version())
    print('\n-----------------< SW_START >-----------------\n')
    print(f'<< python_version_{py_ver} >>')

    os.environ["PYTHONPATH"] = os.pathsep + python_modules
    start()

except IOError as e:
    info_text = f"{e}"
    Popen(f'{sw_crier} -e {info_text}', shell=True)

################################___THE END___:
